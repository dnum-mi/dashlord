{
	"@programName": "OWASP ZAP",
	"@version": "2.12.0",
	"@generated": "Sun, 9 Apr 2023 01:03:12",
	"site":[ 
		{
			"@name": "https://pro.permisdeconduire.gouv.fr",
			"@host": "pro.permisdeconduire.gouv.fr",
			"@port": "443",
			"@ssl": "true",
			"alerts": [ 
				{
					"pluginid": "10055",
					"alertRef": "10055-4",
					"alert": "CSP: Wildcard Directive",
					"name": "CSP: Wildcard Directive",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"uri": "https://pro.permisdeconduire.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: \nform-action\n\nThe directive(s): form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: \nform-action\n\nThe directive(s): form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything."
						}
					],
					"count": "2",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: </p><p>form-action</p><p></p><p>The directive(s): form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.</p>",
					"reference": "<p>http://www.w3.org/TR/CSP2/</p><p>http://www.w3.org/TR/CSP/</p><p>http://caniuse.com/#search=content+security+policy</p><p>http://content-security-policy.com/</p><p>https://github.com/shapesecurity/salvation</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-10",
					"alert": "CSP: script-src unsafe-eval",
					"name": "CSP: script-src unsafe-eval",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"uri": "https://pro.permisdeconduire.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "script-src includes unsafe-eval."
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "script-src includes unsafe-eval."
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "script-src includes unsafe-eval."
						}
					],
					"count": "3",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>script-src includes unsafe-eval.</p>",
					"reference": "<p>http://www.w3.org/TR/CSP2/</p><p>http://www.w3.org/TR/CSP/</p><p>http://caniuse.com/#search=content+security+policy</p><p>http://content-security-policy.com/</p><p>https://github.com/shapesecurity/salvation</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-5",
					"alert": "CSP: script-src unsafe-inline",
					"name": "CSP: script-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"uri": "https://pro.permisdeconduire.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "script-src includes unsafe-inline."
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "script-src includes unsafe-inline."
						}
					],
					"count": "3",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>script-src includes unsafe-inline.</p>",
					"reference": "<p>http://www.w3.org/TR/CSP2/</p><p>http://www.w3.org/TR/CSP/</p><p>http://caniuse.com/#search=content+security+policy</p><p>http://content-security-policy.com/</p><p>https://github.com/shapesecurity/salvation</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "7"
				},
				{
					"pluginid": "10055",
					"alertRef": "10055-6",
					"alert": "CSP: style-src unsafe-inline",
					"name": "CSP: style-src unsafe-inline",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"uri": "https://pro.permisdeconduire.gouv.fr",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/robots.txt",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "style-src includes unsafe-inline."
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "Content-Security-Policy",
							"attack": "",
							"evidence": "default-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' 'self' cdn.tagcommander.com cdn.trustcommander.net mmtro.com cdn.mmtro.com; connect-src 'self' privacy.trustcommander.net privacy.commander1.com; img-src 'self' privacy.trustcommander.net privacy.commander1.com logs4.xiti.com mmtro.com vod.api.video; media-src 'self' vod.api.video; style-src 'unsafe-inline' 'self' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; frame-src cdn.trustcommander.net; frame-ancestors 'self' cdn.tagcommander.com; manifest-src 'self';",
							"otherinfo": "style-src includes unsafe-inline."
						}
					],
					"count": "3",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.</p>",
					"otherinfo": "<p>style-src includes unsafe-inline.</p>",
					"reference": "<p>http://www.w3.org/TR/CSP2/</p><p>http://www.w3.org/TR/CSP/</p><p>http://caniuse.com/#search=content+security+policy</p><p>http://content-security-policy.com/</p><p>https://github.com/shapesecurity/salvation</p><p>https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "7"
				},
				{
					"pluginid": "10063",
					"alertRef": "10063-1",
					"alert": "Permissions Policy Header Not Set",
					"name": "Permissions Policy Header Not Set",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.</p>",
					"instances":[ 
						{
							"uri": "https://pro.permisdeconduire.gouv.fr",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "",
							"otherinfo": ""
						}
					],
					"count": "3",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy</p><p>https://developers.google.com/web/updates/2018/06/feature-policy</p><p>https://scotthelme.co.uk/a-new-security-header-feature-policy/</p><p>https://w3c.github.io/webappsec-feature-policy/</p><p>https://www.smashingmagazine.com/2018/12/feature-policy/</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "1"
				},
				{
					"pluginid": "10049",
					"alertRef": "10049",
					"alert": "Non-Storable Content",
					"name": "Non-Storable Content",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The response contents are not storable by caching components such as proxy servers. If the response does not contain sensitive, personal or user-specific information, it may benefit from being stored and cached, to improve performance.</p>",
					"instances":[ 
						{
							"uri": "https://pro.permisdeconduire.gouv.fr",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "401",
							"otherinfo": ""
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "401",
							"otherinfo": ""
						},
						{
							"uri": "https://pro.permisdeconduire.gouv.fr/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "401",
							"otherinfo": ""
						}
					],
					"count": "3",
					"solution": "<p>The content may be marked as storable by ensuring that the following conditions are satisfied:</p><p>The request method must be understood by the cache and defined as being cacheable (\"GET\", \"HEAD\", and \"POST\" are currently defined as cacheable)</p><p>The response status code must be understood by the cache (one of the 1XX, 2XX, 3XX, 4XX, or 5XX response classes are generally understood)</p><p>The \"no-store\" cache directive must not appear in the request or response header fields</p><p>For caching by \"shared\" caches such as \"proxy\" caches, the \"private\" response directive must not appear in the response</p><p>For caching by \"shared\" caches such as \"proxy\" caches, the \"Authorization\" header field must not appear in the request, unless the response explicitly allows it (using one of the \"must-revalidate\", \"public\", or \"s-maxage\" Cache-Control response directives)</p><p>In addition to the conditions above, at least one of the following conditions must also be satisfied by the response:</p><p>It must contain an \"Expires\" header field</p><p>It must contain a \"max-age\" response directive</p><p>For \"shared\" caches such as \"proxy\" caches, it must contain a \"s-maxage\" response directive</p><p>It must contain a \"Cache Control Extension\" that allows it to be cached</p><p>It must have a status code that is defined as cacheable by default (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).   </p>",
					"otherinfo": "",
					"reference": "<p>https://tools.ietf.org/html/rfc7234</p><p>https://tools.ietf.org/html/rfc7231</p><p>http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)</p>",
					"cweid": "524",
					"wascid": "13",
					"sourceid": "1"
				}
			]
		}
	]
}
